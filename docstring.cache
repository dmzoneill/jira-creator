{
    "/tmp/helper_docstring.py": [],
    "jira_creator/commands/cli_set_story_epic.py": [],
    "jira_creator/commands/cli_list_issues.py": [],
    "jira_creator/commands/cli_set_acceptance_criteria.py": [],
    "jira_creator/commands/cli_list_sprints.py": [],
    "jira_creator/commands/cli_view_user.py": [],
    "jira_creator/commands/cli_add_comment.py": [],
    "jira_creator/commands/cli_ai_helper.py": [],
    "jira_creator/commands/cli_block.py": [],
    "jira_creator/commands/cli_set_status.py": [],
    "jira_creator/commands/cli_unblock.py": [],
    "jira_creator/commands/cli_talk.py": [],
    "jira_creator/commands/_try_cleanup.py": [],
    "jira_creator/commands/cli_validate_issue.py": [],
    "jira_creator/commands/cli_set_summary.py": [],
    "jira_creator/commands/cli_create_issue.py": [],
    "jira_creator/commands/cli_search.py": [],
    "jira_creator/commands/cli_change_type.py": [],
    "jira_creator/commands/cli_set_story_points.py": [],
    "jira_creator/commands/cli_set_priority.py": [],
    "jira_creator/commands/cli_add_sprint.py": [],
    "jira_creator/commands/cli_search_users.py": [],
    "jira_creator/commands/cli_edit_issue.py": [
        {
            "sha1": "618296ae30417e71d379db9f988f355753f27482",
            "docstring": "\"\"\"\nFetches the description of a Jira issue identified by the given issue key.\n\nArgs:\n    jira (JiraAPI): An instance of JiraAPI used to interact with the Jira service.\n    issue_key (str): The key identifying the Jira issue for which the description needs to be fetched.\n\nReturns:\n    str: The description of the Jira issue.\n\nRaises:\n    FetchDescriptionError: If an error occurs while fetching the description.\n\"\"\"",
            "last_accessed": 1745435466
        },
        {
            "sha1": "dc4f1c709b0ddae1f0438e81d0200d047ce1c130",
            "docstring": "\"\"\"\nSummary:\nPrints the current cleaned description in a loop for linting purposes.\n\nArguments:\n- cleaned (str): The cleaned description that needs to be linted.\n- ai_provider: The AI provider used for linting.\n\nSide Effects:\nPrints the current cleaned description in a loop for linting purposes.\n\"\"\"",
            "last_accessed": 1745435477
        },
        {
            "sha1": "4e262e94e0e57bf557e50fa585222a295d35087d",
            "docstring": "\"\"\"\nUpdate the description of a Jira issue.\n\nArguments:\n- jira: An instance of the Jira API client.\n- issue_key: A string representing the key of the Jira issue to update.\n- cleaned: A string containing the cleaned description to update the Jira issue with.\n\nExceptions:\n- UpdateDescriptionError: Raised if there is an error while updating the description.\n\nSide Effects:\n- Modifies the description of the specified Jira issue.\n\n\"\"\"",
            "last_accessed": 1745435477
        },
        {
            "sha1": "a9d1d7eb6e61896a7a32d3e535a4aec6e6217c56",
            "docstring": "\"\"\"\nEdit an issue's description in a Jira instance using a command-line interface.\n\nArguments:\n- jira (JIRA): A Jira instance to interact with.\n- ai_provider (AIProvider): An AI provider for natural language processing.\n- default_prompt (str): The default prompt message for user input.\n- try_cleanup_fn (function): A function to attempt cleanup operations.\n- args (Namespace): The parsed command-line arguments.\n\nReturn:\n- bool: False if the original description is empty, indicating the issue was not edited.\n\"\"\"",
            "last_accessed": 1745435477
        },
        {
            "sha1": "89186b48084ee980c76aedfe082cdb53e7751087",
            "docstring": "\"\"\"\nThis module provides functionality for editing Jira issue descriptions using a command-line interface. It includes methods to fetch, edit, and update issue descriptions, as well as validate and lint the descriptions for quality.\n\nKey Functions:\n- fetch_description(jira, issue_key): Retrieves the description of a Jira issue.\n- edit_description(original_description): Opens the issue description in a text editor for user modifications.\n- get_prompt(jira, issue_key, default_prompt): Retrieves a prompt based on the issue type from a prompt library.\n- lint_description_once(cleaned, ai_provider): Validates the cleaned description and prompts the user for additional input if issues are found.\n- lint_description(cleaned, ai_provider): Continuously lints the description until no issues are detected.\n- update_jira_description(jira, issue_key, cleaned): Updates the Jira issue description with the cleaned text.\n- cli_edit_issue(jira, ai_provider, default_prompt, try_cleanup_fn, args): Main function for editing an issue description, coordinating the fetching, editing, linting, and updating processes.\n\nExceptions:\n- Various exceptions are raised for error handling, including issues related to editing, fetching, and updating descriptions.\n\"\"\"",
            "last_accessed": 1745435466
        },
        {
            "sha1": "8db3051a5df0697be315ee2e83708d3b6537b961",
            "docstring": "\"\"\"\nEdit the description using the default text editor.\n\nArguments:\n- original_description (str): The original description to be edited.\n\nReturn:\n- str: The edited description after modifications.\n\nExceptions:\n- EditDescriptionError: Raised if an error occurs while editing the description.\n\nSide Effects:\n- Opens the default text editor to allow the user to modify the description.\n- Prints an error message if editing the description fails, which is captured in the logs.\n\"\"\"",
            "last_accessed": 1745435468
        },
        {
            "sha1": "f6bbd2ba967f316eb7e625f2cce914faf208623b",
            "docstring": "\"\"\"\nRetrieve a prompt related to a Jira issue.\n\nArguments:\n- jira: An object representing the Jira instance.\n- issue_key: A string containing the key of the Jira issue.\n- default_prompt: A string representing the default prompt to be used if the Jira prompt cannot be retrieved.\n\nReturn:\n- A string containing the prompt related to the Jira issue. If the prompt cannot be retrieved, the default prompt is returned.\n\nExceptions:\n- GetPromptError: Raised if there is an error while trying to retrieve the Jira prompt.\n\nSide Effects:\n- Prints a message if the Jira prompt cannot be retrieved and the default prompt is used.\n\"\"\"",
            "last_accessed": 1745435475
        },
        {
            "sha1": "b2df19e8fa6106519a0c90d7a8c0919655eea38a",
            "docstring": "\"\"\"\nLint a description once using a specified AI provider.\n\nArguments:\n- cleaned (str): The cleaned description to be linted.\n- ai_provider (str): The AI provider to use for linting.\n\nSide Effects:\n- Prints the validation issues found during linting.\n\n\"\"\"",
            "last_accessed": 1745435477
        }
    ],
    "jira_creator/commands/cli_remove_sprint.py": [],
    "jira_creator/commands/cli_view_issue.py": [],
    "jira_creator/commands/cli_open_issue.py": [],
    "jira_creator/commands/cli_add_flag.py": [],
    "jira_creator/commands/cli_unassign.py": [],
    "jira_creator/commands/cli_blocked.py": [],
    "jira_creator/commands/cli_remove_flag.py": [],
    "jira_creator/commands/__init__.py": [],
    "jira_creator/commands/cli_quarterly_connection.py": [],
    "jira_creator/commands/cli_vote_story_points.py": [],
    "jira_creator/commands/cli_assign.py": [],
    "jira_creator/commands/cli_lint.py": [],
    "jira_creator/commands/cli_clone_issue.py": [],
    "jira_creator/commands/cli_lint_all.py": [
        {
            "sha1": "c86be8bb3ea2183111a58edcbd7941338053f59e",
            "docstring": "\"\"\"\nLint all Jira issues based on specified criteria.\n\nArguments:\n- jira (JIRA): An instance of the JIRA client.\n- ai_provider (AIProvider): An instance of the AI provider.\n- args (Namespace): A namespace object containing parsed command-line arguments.\n    - args.reporter (str): The reporter of the issues to filter by.\n    - args.assignee (str): The assignee of the issues to filter by.\n    - args.project (str): The project key to filter the issues.\n    - args.component (str): The component to filter the issues.\n\nNo return value.\n\nExceptions:\n- None\n\"\"\"",
            "last_accessed": 1745435178
        }
    ],
    "jira_creator/commands/cli_migrate.py": [
        {
            "sha1": "911ee2cb4700d99126ea478056c7eebaa886072b",
            "docstring": "\"\"\"\nThis script defines a function 'cli_migrate' that migrates an issue in Jira to a new issue type. \nIt takes Jira instance and command line arguments as input, migrates the issue, and prints the migration details.\nIf the migration fails, it raises a MigrateError with an appropriate error message.\n\"\"\"",
            "last_accessed": 1745435181
        },
        {
            "sha1": "0215f4709ec99e7b4f6fb3194ce08c88801e4133",
            "docstring": "\"\"\"\nMigrate an issue in Jira to a new type.\n\nArguments:\n- jira (JiraClient): An instance of the Jira client.\n- args (Namespace): A namespace containing the following attributes:\n    - issue_key (str): The key of the issue to be migrated.\n    - new_type (str): The new type to migrate the issue to.\n\nReturn:\n- str: The new key of the migrated issue.\n\nExceptions:\n- MigrateError: Raised if the migration process fails.\n\nSide Effects:\n- Prints the success message if the migration is successful.\n- Prints the error message if the migration fails.\n\"\"\"",
            "last_accessed": 1745435184
        }
    ]
}