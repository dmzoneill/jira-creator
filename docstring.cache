{
    "/tmp/helper_docstring.py": [],
    "jira_creator/commands/cli_set_story_epic.py": [],
    "jira_creator/commands/cli_list_issues.py": [],
    "jira_creator/commands/cli_set_acceptance_criteria.py": [],
    "jira_creator/commands/cli_list_sprints.py": [],
    "jira_creator/commands/cli_view_user.py": [],
    "jira_creator/commands/cli_add_comment.py": [],
    "jira_creator/commands/cli_ai_helper.py": [],
    "jira_creator/commands/cli_block.py": [],
    "jira_creator/commands/cli_set_status.py": [],
    "jira_creator/commands/cli_unblock.py": [],
    "jira_creator/commands/cli_talk.py": [],
    "jira_creator/commands/_try_cleanup.py": [],
    "jira_creator/commands/cli_validate_issue.py": [],
    "jira_creator/commands/cli_set_summary.py": [],
    "jira_creator/commands/cli_create_issue.py": [],
    "jira_creator/commands/cli_search.py": [],
    "jira_creator/commands/cli_change_type.py": [],
    "jira_creator/commands/cli_set_story_points.py": [],
    "jira_creator/commands/cli_set_priority.py": [],
    "jira_creator/commands/cli_add_sprint.py": [],
    "jira_creator/commands/cli_search_users.py": [],
    "jira_creator/commands/cli_edit_issue.py": [],
    "jira_creator/commands/cli_remove_sprint.py": [],
    "jira_creator/commands/cli_view_issue.py": [],
    "jira_creator/commands/cli_open_issue.py": [],
    "jira_creator/commands/cli_add_flag.py": [],
    "jira_creator/commands/cli_unassign.py": [],
    "jira_creator/commands/cli_blocked.py": [],
    "jira_creator/commands/cli_remove_flag.py": [],
    "jira_creator/commands/__init__.py": [],
    "jira_creator/commands/cli_quarterly_connection.py": [],
    "jira_creator/commands/cli_vote_story_points.py": [],
    "jira_creator/commands/cli_assign.py": [],
    "jira_creator/commands/cli_lint.py": [],
    "jira_creator/commands/cli_clone_issue.py": [],
    "jira_creator/commands/cli_lint_all.py": [],
    "jira_creator/commands/cli_migrate.py": [],
    "jira_creator/rest/ops/set_priority.py": [],
    "jira_creator/rest/ops/set_summary.py": [],
    "jira_creator/rest/ops/set_status.py": [],
    "jira_creator/rest/ops/add_to_sprint_by_name.py": [],
    "jira_creator/rest/ops/assign_issue.py": [],
    "jira_creator/rest/ops/unblock_issue.py": [],
    "jira_creator/rest/ops/blocked.py": [],
    "jira_creator/rest/ops/set_story_points.py": [],
    "jira_creator/rest/ops/view_issue.py": [],
    "jira_creator/rest/ops/update_description.py": [],
    "jira_creator/rest/ops/build_payload.py": [],
    "jira_creator/rest/ops/block_issue.py": [],
    "jira_creator/rest/ops/get_acceptance_criteria.py": [],
    "jira_creator/rest/ops/get_issue_type.py": [],
    "jira_creator/rest/ops/remove_flag.py": [],
    "jira_creator/rest/ops/add_flag.py": [],
    "jira_creator/rest/ops/search_issues.py": [],
    "jira_creator/rest/ops/vote_story_points.py": [],
    "jira_creator/rest/ops/set_story_epic.py": [],
    "jira_creator/rest/ops/get_current_user.py": [],
    "jira_creator/rest/ops/change_issue_type.py": [],
    "jira_creator/rest/ops/set_acceptance_criteria.py": [],
    "jira_creator/rest/ops/get_description.py": [],
    "jira_creator/rest/ops/create_issue.py": [],
    "jira_creator/rest/ops/migrate_issue.py": [],
    "jira_creator/rest/ops/add_comment.py": [],
    "jira_creator/rest/ops/unassign_issue.py": [],
    "jira_creator/rest/ops/get_user.py": [],
    "jira_creator/rest/ops/__init__.py": [],
    "jira_creator/rest/ops/list_sprints.py": [],
    "jira_creator/rest/ops/search_users.py": [],
    "jira_creator/rest/ops/set_sprint.py": [],
    "jira_creator/rest/ops/list_issues.py": [
        {
            "sha1": "bf795f21febfd0bba626d65aa5c9782cada61ede",
            "docstring": "\"\"\"\nThis module provides a function to list JIRA issues based on specified criteria.\n\nThe 'list_issues' function takes various parameters such as project, component, assignee, status, summary, and others to filter the JIRA issues. It constructs a JQL query based on the parameters provided and retrieves the relevant issues using the JIRA API.\n\nThe function also processes the retrieved issues, extracts sprint information, and adds it to each issue before returning the list of filtered issues.\n\nNote: The function includes JSCPD ignore comments to exclude code blocks from duplication detection.\n\"\"\"",
            "last_accessed": 1745435705
        },
        {
            "sha1": "f2e5519dc8adb5a07b361f7a4e562af4566416c3",
            "docstring": "\"\"\"\nRetrieve a list of issues based on specified filters.\n\nArguments:\n- request_fn (function): A function used to make HTTP requests.\n- get_current_user_fn (function): A function used to retrieve the current user.\n- project (str): Filter issues by project name.\n- component (str): Filter issues by component name.\n- assignee (str): Filter issues by assignee.\n- status (str): Filter issues by status.\n- summary (str): Filter issues by summary.\n- show_reason (bool): Flag to indicate whether to show the reason for the issue.\n- blocked (bool): Flag to filter blocked issues.\n- unblocked (bool): Flag to filter unblocked issues.\n- reporter (str): Filter issues by reporter.\n\nReturns:\nNone\n\n\"\"\"",
            "last_accessed": 1745435708
        }
    ],
    "jira_creator/rest/ops/remove_from_sprint.py": [
        {
            "sha1": "397a8aac103fdcd80d3907d67be98769e7d4ae9c",
            "docstring": "\"\"\"\nThis module defines a function 'remove_from_sprint' that is used to remove an issue from a sprint in an Agile project management tool. It takes two parameters: 'request_fn' which is a function for making HTTP requests and 'issue_key' which is the key of the issue to be removed from the sprint. If the issue is successfully removed from the sprint, a success message is printed. If an error occurs during the removal process, a failure message is printed and a 'RemoveFromSprintError' exception is raised with an error message. \n\"\"\"",
            "last_accessed": 1745435710
        },
        {
            "sha1": "681bb7ba850219aa0b7a0f526fca91057b3d2eac",
            "docstring": "\"\"\"\nRemoves an issue from the current sprint backlog.\n\nArguments:\n- request_fn (function): A function used to make HTTP requests.\n- issue_key (str): The key of the issue to be removed from the sprint backlog.\n\nExceptions:\n- RemoveFromSprintError: Raised when there is an issue removing the specified issue from the sprint backlog.\n\nSide Effects:\n- If successful, prints a message indicating that the issue has been moved to the backlog.\n- If an error occurs, prints a message indicating the failure and raises a RemoveFromSprintError.\n\n\"\"\"",
            "last_accessed": 1745435713
        }
    ],
    "jira_creator/rest/ops/clone_issue.py": [
        {
            "sha1": "e0a576425c840c4c3914b8818a42be021497a898",
            "docstring": "\"\"\"\nClones an issue by creating a new flag for the specified issue key.\n\nArguments:\n- request_fn (function): A function used to make HTTP requests.\n- issue_key (str): The key of the issue to be cloned.\n\nReturn:\n- dict: A dictionary representing the response from the request function.\n\n\"\"\"",
            "last_accessed": 1745435714
        }
    ],
    "jira_creator/rest/client.py": [
        {
            "sha1": "5187f6d7e3ee3624d0a156d157c257733190865a",
            "docstring": "\"\"\"\nA client for interacting with the Jira API, providing methods to manage issues, sprints, and user interactions.\n\nThis module defines the `JiraClient` class, which encapsulates functionality for:\n- Making requests to the Jira API with proper handling of authentication and error management.\n- Caching field metadata for efficient access.\n- Creating, updating, and managing issues, including adding comments, changing issue types, and setting priorities.\n- Retrieving information about users, issues, and sprints.\n- Utility methods for debugging requests using cURL commands.\n\nDependencies:\n- `requests`: For making HTTP requests to the Jira API.\n- `core.env_fetcher`: For fetching environment variables.\n- `exceptions.exceptions`: Custom exceptions for handling request errors.\n- Various utility functions from the `ops` module for specific Jira operations.\n\nUsage:\nInstantiate the `JiraClient` class and use its methods to interact with Jira. Ensure that the necessary environment variables are set for proper configuration.\n\"\"\"",
            "last_accessed": 1745435906
        },
        {
            "sha1": "64b2f9d2d9928db350941fbb26985b5423bb1fb6",
            "docstring": "\"\"\"\nA client for interacting with the Jira API, providing methods to manage issues, projects, and various Jira functionalities.\n\nAttributes:\n    jira_url (str): The base URL for the Jira instance.\n    project_key (str): The key of the project to be managed.\n    affects_version (str): The version that the issues affect.\n    component_name (str): The name of the component related to the issues.\n    priority (str): The priority level for the issues.\n    jpat (str): The Jira Personal Access Token for authentication.\n    epic_field (str): The field used for epics in Jira.\n    board_id (str): The ID of the Jira board.\n    fields_cache_path (str): The file path for caching Jira fields.\n    is_speaking (bool): A flag indicating if the client is in speaking mode.\n\nMethods:\n    generate_curl_command(method, url, headers, json_data=None, params=None): Generates a curl command for debugging API requests.\n    cache_fields(): Caches Jira fields for efficient access, checking the cache's age.\n    get_field_name(field_id): Retrieves the name of a Jira field by its ID.\n    build_payload(summary, description, issue_type): Constructs a payload for creating or updating issues.\n    get_acceptance_criteria(issue_key): Retrieves acceptance criteria for a specified issue.\n    set_acceptance_criteria(issue_key, acceptance_criteria): Sets acceptance criteria for a specified issue.\n    get_description(issue_key): Retrieves the description of a specified issue.\n    update_description(issue_key, new_description): Updates the description of a specified issue.\n    create_issue(payload): Creates a new issue in Jira using the provided payload.\n    change_issue_type(issue_key, new_type): Changes the type of a specified issue.\n    migrate_issue(old_key, new_type): Migrates an issue to a new type.\n    add_comment(issue_key, comment): Adds a comment to a specified issue.\n    get_current_user(): Retrieves the current authenticated user.\n    get_user(str): Retrieves a user by their username or ID.\n    get_issue_type(issue_key): Retrieves the type of a specified issue.\n    unassign_issue(issue_key): Unassigns a specified issue.\n    assign_issue(issue_key, assignee): Assigns a specified issue to a user.\n    list_issues(...): Lists issues based on various optional filters.\n    set_priority(issue_key, priority): Sets the priority of a specified issue.\n    set_sprint(issue_key, sprint_id): Assigns a specified issue to a sprint.\n    remove_from_sprint(issue_key): Removes a specified issue from its sprint.\n    add_to_sprint_by_name(issue_key, sprint_name): Adds a specified issue to a sprint by its name.\n    set_status(issue_key, target_status): Sets the status of a specified issue.\n    set_story_epic(issue_key, epic_key): Assigns an epic to a specified story.\n    vote_story_points(issue_key, points): Votes on story points for a specified issue.\n    set_story_points(issue_key, points): Sets story points for a specified issue.\n    block_issue(issue_key, reason): Blocks a specified issue with a reason.\n    unblock_issue(issue_key): Unblocks a specified issue.\n    blocked(...): Lists blocked issues based on various optional filters.\n    search_issues(jql): Searches for issues using a JQL query.\n    search_users(str): Searches for users based on a string.\n    view_issue(issue_key): Retrieves details of a specified issue.\n    add_flag(issue_key): Adds a flag to a specified issue.\n    remove_flag(issue_key): Removes a flag from a specified issue.\n    list_sprints(board_id): Lists sprints for a specified board.\n    set_summary(issue_key): Sets the summary of a specified issue.\n    clone_issue(issue_key): Clones a specified issue.\n\"\"\"",
            "last_accessed": 1745435919
        },
        {
            "sha1": "7fa9fb3dc80f6b9cef7a16a4b93071b94006b70b",
            "docstring": "\"\"\"\nInitialize a JIRA client with environment variables.\n\nArguments:\n    None\n\nSide Effects:\n    - Sets instance attributes for JIRA URL, project key, affects version, component name, priority, JPAT,\n      epic field, board ID, and fields cache path using environment variables fetched by EnvFetcher.\n    - Sets 'is_speaking' attribute to False.\n\"\"\"",
            "last_accessed": 1745435921
        },
        {
            "sha1": "1fde4de3c02eca0934c3597f0a58af4b691baac9",
            "docstring": "\"\"\"\nGenerate a cURL command string based on the provided HTTP method, URL, headers, JSON data, and parameters.\n\nArguments:\n- method (str): The HTTP method to use in the cURL command (e.g., GET, POST).\n- url (str): The URL to which the cURL command will be directed.\n- headers (Dict[str, str]): A dictionary containing the headers to include in the cURL command.\n- json_data (Optional[Dict[str, Any]]): Optional JSON data to include in the cURL command body.\n- params (Optional[Dict[str, str]]): Optional parameters to include in the cURL command.\n\nSide Effects:\n- Modifies the 'parts' list to build the cURL command string.\n\nNote: This function does not return a value.\n\"\"\"",
            "last_accessed": 1745435924
        },
        {
            "sha1": "b111148e3f8bc794bb4455791dbd839b94b28a8a",
            "docstring": "\"\"\"\nCore request logic. Returns a tuple (status_code, result).\n\nArguments:\n- method (str): The HTTP method to use for the request (e.g., 'GET', 'POST').\n- url (str): The URL to send the request to.\n- headers (Dict[str, str]): A dictionary containing the request headers.\n- json (Optional[Dict[str, Any]]): A dictionary containing the JSON payload for the request. Defaults to None.\n- params (Optional[Dict[str, str]]): A dictionary containing the query parameters for the request. Defaults to None.\n\nReturn:\n- tuple: A tuple containing the HTTP status code and the parsed JSON result.\n\nExceptions:\n- No exceptions are explicitly raised in this function.\n\"\"\"",
            "last_accessed": 1745435926
        },
        {
            "sha1": "99d6963c85983028888ca8c19bdec9c08c63c0d6",
            "docstring": "\"\"\"\nHandles retries and delegates the request to __request.\n\nArguments:\n- method (str): The HTTP method to be used for the request (e.g., 'GET', 'POST').\n- path (str): The endpoint path to be appended to the base URL.\n- json (Optional[Dict[str, Any]]): A dictionary containing the JSON payload for the request (default is None).\n- params (Optional[Dict[str, str]]): A dictionary containing the query parameters for the request (default is None).\n\nReturn:\n- Optional[Dict[str, Any]]: A dictionary representing the response data from the request. Returns None if there is no response.\n\nSide Effects:\n- Constructs the full URL using the base URL and the provided path.\n- Sets the necessary headers for the request, including Authorization and Content-Type.\n\"\"\"",
            "last_accessed": 1745435928
        },
        {
            "sha1": "15ab84030b2f2f988f742e9ab27878de197928e5",
            "docstring": "\"\"\"\nSummary:\nChecks if a cache file exists and is less than 24 hours old, then loads and returns the cached data from the file.\n\nArguments:\n- self: The instance of the class.\n  (Assumed to have attributes 'fields_cache_path' specifying the path to the cache file.)\n\nReturn:\n- The cached data loaded from the file as a Python object (e.g., dictionary, list).\n  If the cache file does not exist or is older than 24 hours, the function does not return anything.\n\n\"\"\"",
            "last_accessed": 1745435930
        },
        {
            "sha1": "210c1e7cf8995cf8e5f742abb6d6cbe557c80fd4",
            "docstring": "\"\"\"\nRetrieves the field name corresponding to the given field ID.\n\nArguments:\n- self: The object instance.\n- field_id (int): The ID of the field for which the name is to be retrieved.\n\nSide Effects:\n- Updates or loads the fields from cache.\n\n\"\"\"",
            "last_accessed": 1745435931
        },
        {
            "sha1": "899b231dfc66fd60f0b801f4815f817978b0f09a",
            "docstring": "\"\"\"\nBuilds a payload for creating an issue in a project with the provided summary, description, and issue type.\n\nArguments:\n- summary (str): A brief summary of the issue.\n- description (str): Detailed description of the issue.\n- issue_type (str): Type of the issue.\n\nReturn: \nThe payload for creating an issue with the specified details and additional project-specific information.\n\n\"\"\"",
            "last_accessed": 1745435933
        },
        {
            "sha1": "e0b33b5a396c65186aadba1a3c59e2473d5e9f16",
            "docstring": "\"\"\"\nRetrieves the acceptance criteria for a specific issue identified by the given issue key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key identifying the specific issue for which acceptance criteria are to be retrieved.\n\nReturn:\n- str: The acceptance criteria for the specified issue.\n\n\"\"\"",
            "last_accessed": 1745435934
        },
        {
            "sha1": "701926edd9af0bd43c3c51e9dd755aaf1925abd1",
            "docstring": "\"\"\"\nSets the acceptance criteria for a specific issue identified by the given issue key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The unique key identifying the issue.\n- acceptance_criteria (str): The acceptance criteria to be set for the issue.\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435936
        },
        {
            "sha1": "98ae5ea1368df708d8ccb55f87025989b0d2e45c",
            "docstring": "\"\"\"\nRetrieve the description of a specific issue identified by its key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The unique key of the issue for which the description is requested.\n\nReturn:\n- str: The description of the issue identified by the provided key.\n\n\"\"\"",
            "last_accessed": 1745435938
        },
        {
            "sha1": "6f0d37cf8bcadec7d29349e5d491b0b154ece8ea",
            "docstring": "\"\"\"\nUpdates the description of an issue identified by the given issue key.\n\nArgs:\n    self: The object instance.\n    issue_key (str): The unique key of the issue to update.\n    new_description (str): The new description to set for the issue.\n\nReturns:\n    The result of updating the description for the specified issue.\n\n\"\"\"",
            "last_accessed": 1745435940
        },
        {
            "sha1": "60b7a25e0d0dce4071fa72f63d7a314b57d7baf5",
            "docstring": "\"\"\"\nCreates an issue using the provided payload.\n\nArguments:\n- self: The object instance.\n- payload: A dictionary containing the information needed to create the issue.\n\nReturn:\n- The result of calling the 'create_issue' function with the request and payload.\n\n\"\"\"",
            "last_accessed": 1745435941
        },
        {
            "sha1": "8cb3ab030945063700ec2b31c4adfd3886655415",
            "docstring": "\"\"\"\nChange the type of an issue in Jira.\n\nArguments:\n- self: the object instance\n- issue_key (str): the key of the issue to be modified\n- new_type (str): the new type to assign to the issue\n\nReturn:\n- The result of the change_issue_type function call with the provided parameters.\n\n\"\"\"",
            "last_accessed": 1745435943
        },
        {
            "sha1": "a66624e9c2bb185cfa7cbf49ec703580c118b54d",
            "docstring": "\"\"\"\nMigrates an issue in Jira from one type to another.\n\nArguments:\n- self: The object instance.\n- old_key (str): The key of the issue to be migrated.\n- new_type (str): The new type to which the issue will be migrated.\n\nReturn:\n- The result of migrating the issue.\n\n\"\"\"",
            "last_accessed": 1745435953
        },
        {
            "sha1": "e8c0f43f6038e79195b9ebb94de808c4f4933070",
            "docstring": "\"\"\"\nAdds a comment to an issue specified by its key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key of the issue to add the comment to.\n- comment (str): The content of the comment to be added.\n\nReturn:\n- The result of adding the comment to the specified issue.\n\n\"\"\"",
            "last_accessed": 1745435955
        },
        {
            "sha1": "f6ca92ca8e6ca753f0bb33d7c91eb5b1a600a67a",
            "docstring": "\"\"\"\nSummary:\nRetrieve the current user based on the request provided.\n\nArguments:\n- self: The instance of the class.\n  (self) represents the instance of the class where this method is called.\n  It is used to access attributes and methods within the class.\n\nReturn:\nThe current user retrieved from the request.\nThe type of the returned value is dependent on the implementation of the 'get_current_user' function.\n\n\"\"\"",
            "last_accessed": 1745435957
        },
        {
            "sha1": "f43318fa76daee0f8399faa1d372cf430bf77f60",
            "docstring": "\"\"\"\nRetrieve user information based on a provided string.\n\nArguments:\n- self: The object instance.\n- str (str): A string used to retrieve user information.\n\nReturn:\n- The user information retrieved based on the provided string.\n\n\"\"\"",
            "last_accessed": 1745435958
        },
        {
            "sha1": "e353f00550c3f9144f08b23ac30adc991d4a68c1",
            "docstring": "\"\"\"\nRetrieve the type of an issue identified by the given issue key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The unique key identifying the issue.\n\nReturn:\n- str: The type of the issue identified by the provided key.\n\n\"\"\"",
            "last_accessed": 1745435960
        },
        {
            "sha1": "ab06acee77a835c99e5e1d8acb8a070c18097a0b",
            "docstring": "\"\"\"\nUnassign an issue from a user.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key of the issue to be unassigned.\n\nReturn:\n- The result of unassigning the issue.\n\n\"\"\"",
            "last_accessed": 1745435961
        },
        {
            "sha1": "d3ec80720c7aa40278a82cc82719a432c29362bb",
            "docstring": "\"\"\"\nAssign an issue to a specific user.\n\nArguments:\n- self: the object instance\n- issue_key (str): the key of the issue to be assigned\n- assignee (str): the username of the user to whom the issue will be assigned\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435962
        },
        {
            "sha1": "003ac6889f19e6e2ffbcaf9900f4f7b582f3ca08",
            "docstring": "\"\"\"\nSummary:\nRetrieve a list of issues based on specified filters such as project, component, assignee, status, summary, etc.\n\nArguments:\n- project (str): The project key to filter the issues. If not provided, defaults to the project key of the instance.\n- component (str): The component name to filter the issues. If not provided, defaults to the component name of the instance.\n- assignee (str): The assignee username to filter the issues.\n- status (str): The status of the issues to filter.\n- summary (str): The summary of the issues to filter.\n- show_reason (bool): Flag to indicate whether to show reasons for the issues.\n- blocked (bool): Flag to filter blocked issues.\n- unblocked (bool): Flag to filter unblocked issues.\n- reporter (str): The reporter username to filter the issues.\n\nReturn:\nNone\n\n\"\"\"",
            "last_accessed": 1745435965
        },
        {
            "sha1": "d41c39f5b1d7f03e8c8b297f16098a485d85ca62",
            "docstring": "\"\"\"\nSet the priority of an issue in a Jira system.\n\nArguments:\n- self: the instance of the class.\n- issue_key (str): the key of the issue to set the priority for.\n- priority (str): the priority to set for the issue.\n\nReturn:\n- None\n\nExceptions:\n- None\n\"\"\"",
            "last_accessed": 1745435966
        },
        {
            "sha1": "809faadebd62b73336b915c92a5d3bde6538ea55",
            "docstring": "\"\"\"\nSet the sprint for a specific issue identified by its key.\n\nArguments:\n- self: the object instance\n- issue_key (str): the key of the issue to set the sprint for\n- sprint_id (int): the ID of the sprint to set for the issue\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435968
        },
        {
            "sha1": "c6c9c0c5f1dd4accd54a0bb7de2e11d7430afb33",
            "docstring": "\"\"\"\nRemove an issue from the current sprint.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key identifying the issue to be removed from the sprint.\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435969
        },
        {
            "sha1": "4a274a754ab6cf27fb5ed06ed664f3282dc34778",
            "docstring": "\"\"\"\nAdds an issue to a sprint on a board by name.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key of the issue to be added to the sprint.\n- sprint_name (str): The name of the sprint to which the issue will be added.\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435971
        },
        {
            "sha1": "28acded1f58a02c15d8fc38e30aac8501750325e",
            "docstring": "\"\"\"\nSet the status of an issue identified by its key to a target status.\n\nArguments:\n- self: the object instance\n- issue_key (str): the key identifying the issue\n- target_status (str): the status to set the issue to\n\nReturn:\n- None\n\nExceptions:\n- None\n\"\"\"",
            "last_accessed": 1745435973
        },
        {
            "sha1": "8146dd86bc08a3e257ce7b1e0c252bc1e17812a0",
            "docstring": "\"\"\"\nSets the epic link for a given story in Jira.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key of the story issue to set the epic link for.\n- epic_key (str): The key of the epic to link the story to.\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435974
        },
        {
            "sha1": "a4e0364faa3c98b594ac98e834ed6d9f016aebe2",
            "docstring": "\"\"\"\nCast a vote for story points on a specific issue.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key of the issue to vote on.\n- points (int): The number of story points to vote for the issue.\n\nReturn: \n- None\n\n\"\"\"",
            "last_accessed": 1745435975
        },
        {
            "sha1": "d005032edf5bb5df0b7622b356103cc253c55e84",
            "docstring": "\"\"\"\nSet the story points for a specific issue identified by the given key.\n\nArguments:\n- self: the object instance\n- issue_key (str): the key identifying the specific issue\n- points (int): the number of story points to set for the issue\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435977
        },
        {
            "sha1": "011ded810cc6ce8dcb8628e3a1fa22c388dc8927",
            "docstring": "\"\"\"\nBlocks an issue by providing a reason for blocking.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key identifying the issue to be blocked.\n- reason (str): The reason for blocking the issue.\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435978
        },
        {
            "sha1": "445edacfcf1f1793a869e521cece2668326bdbd4",
            "docstring": "\"\"\"\nUnblocks an issue by its key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key identifying the issue to unblock.\n\nReturn:\n- The result of unblocking the issue.\n\n\"\"\"",
            "last_accessed": 1745435980
        },
        {
            "sha1": "d09a9c9430ce55009ecab65a8e7ceed19bf89a51",
            "docstring": "\"\"\"\nCalls the 'blocked' function with parameters related to project, component, and assignee.\n\nArguments:\n- project (str): The project name to filter the issues.\n- component (str): The component name to filter the issues.\n- assignee (str): The assignee name to filter the issues.\n\nReturns:\n- The result of the 'blocked' function with the provided parameters.\n\n\"\"\"",
            "last_accessed": 1745435981
        },
        {
            "sha1": "4e3b365edf9e734b50e208b5cb0dd7d90b0d1cba",
            "docstring": "\"\"\"\nSearch for issues in Jira based on a JQL query.\n\nArguments:\n- self: the object instance\n- jql (str): the JQL query string used to search for issues in Jira\n\nReturn:\n- The result of the search_issues function, which is not specified in the provided code.\n\n\"\"\"",
            "last_accessed": 1745435983
        },
        {
            "sha1": "cabf34ced12e8033c3fc0a2ef90498d89134c22c",
            "docstring": "\"\"\"\nSearch for users based on a given string.\n\nArguments:\n- self: the object instance\n- str (str): the string used to search for users\n\nReturn:\n- The result of the search_users method called with the _request attribute and the provided string.\n\n\"\"\"",
            "last_accessed": 1745435984
        },
        {
            "sha1": "6ebe89c367c33704bbd93a7f074818f665382dd9",
            "docstring": "\"\"\"\nView an issue by its key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key of the issue to view.\n\nReturn:\n- The result of viewing the issue.\n\n\"\"\"",
            "last_accessed": 1745435986
        },
        {
            "sha1": "4aab551026de28e45a2bdd14e41444a72fec173d",
            "docstring": "\"\"\"\nAdds a flag to an issue identified by the provided issue key.\n\nArgs:\n    self: The object instance.\n    issue_key (str): The key identifying the issue to which the flag will be added.\n\nReturns:\n    The result of adding a flag to the specified issue.\n\n\"\"\"",
            "last_accessed": 1745435988
        },
        {
            "sha1": "dfae53bd3714a60048ce13aab3dda8fd312d3256",
            "docstring": "\"\"\"\nRemove a flag from an issue identified by the given issue key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The unique key identifying the issue from which the flag will be removed.\n\nReturn:\n- None\n\n\"\"\"",
            "last_accessed": 1745435989
        },
        {
            "sha1": "797f93ff72c6ae3f8bc4af36fb0fc8602d04ca68",
            "docstring": "\"\"\"\nSummary:\nRetrieve a list of sprints associated with a specific board.\n\nArguments:\n- self: The object instance.\n- board_id (int): The unique identifier of the board for which to fetch the list of sprints.\n\nReturn:\nList: A list of sprints associated with the specified board.\n\n\"\"\"",
            "last_accessed": 1745435991
        },
        {
            "sha1": "023f785b5f827cc109ac2ec3ec9aa9e7c8e51f93",
            "docstring": "\"\"\"\nSets the summary of an issue identified by the given issue key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key that identifies the issue for which the summary needs to be set.\n\nReturns:\n- None\n\n\"\"\"",
            "last_accessed": 1745435992
        },
        {
            "sha1": "7be7acab74d9205f31f87887e51a6ea107106a9e",
            "docstring": "\"\"\"\nClones an issue in the system identified by the given issue key.\n\nArguments:\n- self: The object instance.\n- issue_key (str): The key identifying the issue to be cloned.\n\nReturn:\n- The result of cloning the issue.\n\n\"\"\"",
            "last_accessed": 1745435994
        }
    ],
    "jira_creator/rest/prompts.py": [
        {
            "sha1": "4182ae8a819015a57b8a753f8cdb4bd6dc1d4ebc",
            "docstring": "\"\"\"\nThis module defines an IssueType enumeration class with different types of issues such as BUG, EPIC, SPIKE, STORY, TASK, COMMENT, DEFAULT, QC, and AIHELPER. \nIt also includes a PromptLibrary class with methods to retrieve file contents and generate prompts based on the provided issue type. \nThe get_prompt method in the PromptLibrary class dynamically generates prompts based on the IssueType provided. \n\"\"\"",
            "last_accessed": 1745435996
        },
        {
            "sha1": "49d9bc712ee919f2d92b6cb6ae48e5c6e8f6a2ab",
            "docstring": "\"\"\"\nThis class defines different types of issues that can be used in a project management system.\n\nAttributes:\n- BUG (str): Represents a bug type issue.\n- EPIC (str): Represents an epic type issue.\n- SPIKE (str): Represents a spike type issue.\n- STORY (str): Represents a story type issue.\n- TASK (str): Represents a task type issue.\n- COMMENT (str): Represents a comment type issue.\n- DEFAULT (str): Represents a default type issue.\n- QC (str): Represents a QC type issue.\n- AIHELPER (str): Represents an AI helper type issue.\n- TEMPLATE_DIR (str): The directory path for templates used by the project management system.\n\"\"\"",
            "last_accessed": 1745436000
        },
        {
            "sha1": "f8b051262f2d621df6094919950edbbbeed4905e",
            "docstring": "\"\"\"\nThis class provides methods to retrieve prompt contents from template files based on different issue types.\n\nAttributes:\n- No attributes are defined in the class, but the class relies on the following constants and types:\n    - TEMPLATE_DIR: Constant representing the directory where template files are stored.\n    - IssueType: Enum representing different types of issues.\nMethods:\n- get_file_contents(full_name): Static method that reads and returns the contents of a template file specified by 'full_name'.\n- get_prompt(issue_type: IssueType) -> str: Static method that generates a prompt message based on the provided 'issue_type'. It combines content from multiple template files depending on the issue type and returns the final prompt message as a string.\n\"\"\"",
            "last_accessed": 1745436002
        },
        {
            "sha1": "b94ef2b95d0fbcc7c6f05c97adf2da6068036f6b",
            "docstring": "\"\"\"\nRetrieve the contents of a file specified by its full name.\n\nArguments:\n- full_name (str): The full name of the file to retrieve its contents.\n\nSide Effects:\n- Reads the contents of the file specified by 'full_name' and stores it in the 'template' variable.\n\n\"\"\"",
            "last_accessed": 1745436003
        },
        {
            "sha1": "37d0824823d6976c53e9f4be7ad80ee8cd42e2ce",
            "docstring": "\"\"\"\nReturn a prompt message based on the provided issue type.\n\nArguments:\n- issue_type (IssueType): An enum representing the type of the issue.\n\nReturn:\n- str: A prompt message based on the issue type.\n\n\"\"\"",
            "last_accessed": 1745436004
        }
    ]
}