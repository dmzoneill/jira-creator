#!/usr/bin/env python
"""
This module defines a BARTProvider class used to interact with an AI service for text improvement.
It includes a method improve_text(prompt, text) to enhance text based on the given prompt.
The class initializes with a default local endpoint URL, which can be overridden using an environment variable.
In case of a successful request, the improve_text method returns the improved text; otherwise, it raises an AiError.

BARTProvider class represents a provider for interacting with the BART (Bidirectional and Auto-Regressive
Transformers) model.

Attributes:
- url (str): The URL endpoint to communicate with the BART model, fetched from the environment variable "AI_URL".
- headers (dict): A dictionary containing headers for the HTTP request, defaulting to {"Content-Type":
"application/json"}.

Methods:
- improve_text(prompt: str, text: str) -> str:
Combines the provided prompt and text, sends a POST request to the BART model endpoint with the concatenated text,
and returns the improved text generated by the model. If the request fails, it raises an AiError with details of the
failure.

Initialize the class with a URL and headers for API requests.

Arguments:
- self: the object instance.

Side Effects:
- Initializes the 'url' attribute with the value fetched from the environment variable "AI_URL".
- Initializes the 'headers' attribute with a dictionary containing the "Content-Type" key set to "application/json".

Improve the given text using an API endpoint.

Arguments:
- self: The object instance.
- prompt (str): The initial prompt or context for the text improvement.
- text (str): The text to be improved.

Return:
- str: The improved text generated by the API.

Exceptions:
- This function may raise exceptions related to the HTTP request or response handling.
"""

# pylint: disable=too-few-public-methods

import requests
from core.env_fetcher import EnvFetcher
from exceptions.exceptions import AiError


class BARTProvider:
    """
    BARTProvider class represents a provider for interacting with the BART (Bidirectional and Auto-Regressive
    Transformers) model.

    Attributes:
    - url (str): The URL endpoint to communicate with the BART model, fetched from the environment variable "AI_URL".
    - headers (dict): A dictionary containing headers for the HTTP request, defaulting to {"Content-Type":
    "application/json"}.

    Methods:
    - improve_text(prompt: str, text: str) -> str:
    Combines the provided prompt and text, sends a POST request to the BART model endpoint with the concatenated text,
    and returns the improved text generated by the model. If the request fails, it raises an AiError with details of
    the failure.
    """

    def __init__(self):
        """
        Initialize the class with a URL and headers for API requests.

        Arguments:
        - self: the object instance.

        Side Effects:
        - Initializes the 'url' attribute with the value fetched from the environment variable "AI_URL".
        - Initializes the 'headers' attribute with a dictionary containing the "Content-Type" key set to
        "application/json".
        """

        # Default to local endpoint or override with env var
        self.url = EnvFetcher.get("AI_URL")
        self.headers = {"Content-Type": "application/json"}

    def improve_text(self, prompt: str, text: str) -> str:
        """
        Improve the given text using an API endpoint.

        Arguments:
        - self: The object instance.
        - prompt (str): The initial prompt or context for the text improvement.
        - text (str): The text to be improved.

        Return:
        - str: The improved text generated by the API.

        Exceptions:
        - This function may raise exceptions related to the HTTP request or response handling.
        """

        full_prompt = f"{prompt}\n\n{text}"
        response = requests.post(
            self.url, headers=self.headers, json={"text": full_prompt}, timeout=30
        )
        if response.status_code == 200:
            return response.json().get("output", "").strip()

        raise AiError(f"BART request failed: {response.status_code} - {response.text}")
