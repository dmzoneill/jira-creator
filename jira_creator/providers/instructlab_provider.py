#!/usr/bin/env python
"""
This module provides the InstructLabProvider class for interacting with an AI service that enhances text generation.
It utilizes the requests library to send POST requests to an AI model server, with the server's URL and model identifier
fetched from environment variables.

The primary functionality is encapsulated in the improve_text method, which accepts a prompt and text, sends a request
to the AI service, and returns the enhanced text. An AiError exception is raised in case of request failures, providing
details about the issue.

Classes:
- InstructLabProvider: A class for enhancing text using an AI model.

Attributes:
- url (str): The URL of the AI model server.
- model (str): The identifier of the AI model used for text generation.

Methods:
- __init__(self): Initializes the class with AI-related environment variables.
- improve_text(self, prompt: str, text: str) -> str: Improves the provided text using the AI model and returns
the enhanced text.

Exceptions:
- AiError: Raised when the POST request to the AI service fails, indicating a service issue.
"""

# pylint: disable=too-few-public-methods

import requests
from core.env_fetcher import EnvFetcher
from exceptions.exceptions import AiError


class InstructLabProvider:
    """
    This class provides a way to interact with an AI model hosted on a specified URL for improving text generation.

    Attributes:
    - url (str): The URL of the AI model server.
    - model (str): The name or identifier of the AI model used for text generation.

    Methods:
    - __init__(self): Initializes the class instance with AI-related environment variables.
    - improve_text(self, prompt: str, text: str) -> str: Sends a POST request to a specified URL with a given prompt
    and text to improve the text using a specific model. It then returns the improved text obtained from the response.
    Raises AiError if the POST request fails, providing details of the failure.
    """

    def __init__(self):
        """
        Initialize the class instance with AI-related environment variables.

        Arguments:
        - self: The class instance itself.

        Side Effects:
        - Sets the 'url' attribute to the value of the environment variable "AI_URL".
        - Sets the 'model' attribute to the value of the environment variable "AI_MODEL".
        """

        self.url = EnvFetcher.get("AI_URL")
        self.model = EnvFetcher.get("AI_MODEL")

    def improve_text(self, prompt: str, text: str) -> str:
        """
        Summary:
        This method sends a POST request to a specified URL with a given prompt and text to improve the text using a
        specific model. It then returns the improved text obtained from the response.

        Arguments:
        - self: The instance of the class.
        - prompt (str): The initial prompt to provide context for improving the text.
        - text (str): The text to be improved based on the provided prompt.

        Return:
        str: The improved text generated by the AI model in response to the provided prompt and text.

        Exceptions:
        - AiError: Raised when the POST request to the URL fails, indicating an issue with the AI service. The
        exception message includes details about the failure, such as the status code and response text.
        """

        full_prompt = f"{prompt}\n\n{text}"
        response = requests.post(
            self.url,
            json={
                "model": self.model,
                "prompt": full_prompt,
                "stream": False,
                "options": {"temperature": 0.3},
            },
            timeout=60,
        )
        if response.status_code == 200:
            return response.json().get("response", "").strip()
        raise AiError(
            f"InstructLab request failed: {response.status_code} - {response.text}"
        )
